# mysql dc
spring.datasource.dc.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.dc.username=root
spring.datasource.dc.password=Qyc5013865812073.
spring.datasource.dc.url=jdbc:mysql://39.98.47.236:3306/saotun_db?autoReconnect=true&rewriteBatchedStatements=true&characterEncoding=utf8&allowMultiQueries=true&&useSSL=false
# 初始化大小
spring.datasource.dc.initialSize=1
# 连接池最小空闲
spring.datasource.dc.minIdle=1
# 连接池最大使用连接数
spring.datasource.dc.maxActive=20
# 连接等待超时时间，单位是毫秒，启用会同时启用公平锁，并发效率会下降
#spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒，每隔60秒运行一次空闲连接回收器
spring.datasource.dc.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒，池中的连接空闲一小时后被回收
spring.datasource.dc.minEvictableIdleTimeMillis=3600000
# 测试有效用的SQL查询语句
spring.datasource.dc.validationQuery=SELECT 1
# 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
spring.datasource.dc.testWhileIdle=true
# 获取连接时，测试是否有效，默认为true，生产环境不开启，否则影响性能（约下降7-10倍）
spring.datasource.dc.testOnBorrow=false
# 归还连接时，是否测试有效，生产环境不开启，否则影响性能
spring.datasource.dc.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.dc.poolPreparedStatements=true
# Statement缓存大小
spring.datasource.dc.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.dc.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.dc.logSlowSql=true
spring.datasource.dc.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000